{"version":3,"sources":["components/TextField/index.js","components/DropdownField/index.js","components/Button/index.js","data/filter.js","reducer.js","data/melburne.js","data/sydney.js","utilities/api.js","utilities/dataHandler.js","provider.js","components/SearchForm/index.js","components/SearchResult/index.js","App.js","reportWebVitals.js","index.js"],"names":["TextField","props","label","placeholder","fieldRef","className","type","ref","DropdownField","data","htmlFor","length","map","option","index","value","Button","CITY_OPTIONS","GENDER_OPTIONS","PET_TYPE","SEARCH_QUERY_SUCCESS","SEARCH_QUERY_FAIL","SEARCH_QUERY_LOADING","generateReducer","state","action","status","error","undefined","MelbourneData","SydneyData","process","REACT_APP_END_POINT_SYDNEY","REACT_APP_END_POINT_MELBOURNE","REACT_APP_MOCKED_DATA","API","Promise","resolve","setTimeout","MockMelbourneData","axios","get","MockSydneyData","filterDataByOwnerAndPetName","query","queryString","toLowerCase","filter","item","name","pets","indexOf","matchOwnerName","some","pet","matchPetName","filterDataByPetType","petType","hasPets","matchPetType","AppContext","createContext","initialState","requestData","AppProvider","children","useReducer","reducer","dispatch","actions","searchQuery","payload","city","gender","all","getDataByCity","then","responses","merged","forEach","response","push","getDataFromAPIResponses","filterDataByGender","Provider","SearchForm","useContext","searchFieldRef","useRef","filterCityFieldRef","filterGenderRef","filterPetTypeRef","onSubmit","e","preventDefault","current","SearchResult","renderPets","sort","a","b","localeCompare","renderList","role","record","age","renderResult","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.441351ae.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TextField(props) {\r\n  const {label, placeholder, fieldRef} = props\r\n  return (\r\n      <>\r\n        <label className={\"h6\"}>{label}</label>\r\n        <input type=\"text\" className=\"form-control\" ref={fieldRef} placeholder={placeholder}/>\r\n      </>\r\n  )\r\n}\r\n\r\nTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  fieldRef : PropTypes.object\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function DropdownField(props) {\r\n  const {fieldRef,label,data} = props;\r\n\r\n  const renderOptions= () => {\r\n    if(data && data.length){\r\n      return (data.map((option,index)=>(<option value={option.value} key={index}>\r\n        {option.label}\r\n      </option>)))\r\n    }\r\n    return(<></>)\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <label className={\"h6\"} htmlFor=\"search-field\">{label}</label>\r\n        <select ref={fieldRef} className=\"custom-select\">\r\n          {renderOptions()}\r\n        </select>\r\n      </>\r\n  )\r\n}\r\n\r\nDropdownField.propTypes ={\r\n  fieldRef: PropTypes.object,\r\n  label: PropTypes.string,\r\n  data: PropTypes.array\r\n}","import React from \"react\";\r\n\r\nexport default function Button (){\r\n  return(\r\n      <button type={\"submit\"} className={\"btn btn-primary w-100\"}>Go!</button>\r\n  )\r\n};","export const CITY_OPTIONS = [\r\n  {\r\n    label: \"All\",\r\n    value: \"\",\r\n  },{\r\n    label: \"Melbourne\",\r\n    value: \"Melbourne\"\r\n  },{\r\n    label: \"Sydney\",\r\n    value: \"Sydney\"\r\n  }\r\n];\r\n\r\nexport const GENDER_OPTIONS = [\r\n  {\r\n    label: \"All\",\r\n    value: \"\",\r\n  },{\r\n    label: \"Male\",\r\n    value: \"Male\"\r\n  },{\r\n    label: \"Female\",\r\n    value: \"Female\"\r\n  }\r\n];\r\n\r\nexport const PET_TYPE = [\r\n  {\r\n    label: \"All\",\r\n    value: \"\",\r\n  },\r\n  {\r\n    label: \"Cat\",\r\n    value: \"Cat\",\r\n  },\r\n  {\r\n    label: \"Bird\",\r\n    value: \"Bird\",\r\n  },\r\n  {\r\n    label: \"Fish\",\r\n    value: \"Fish\",\r\n  },\r\n  {\r\n    label: \"Dog\",\r\n    value: \"Dog\",\r\n  }\r\n];","export const SEARCH_QUERY_SUCCESS = \"app/SEARCH_QUERY_SUCCESS\"\r\nexport const SEARCH_QUERY_FAIL = \"app/SEARCH_QUERY_FAIL\"\r\nexport const SEARCH_QUERY_LOADING = \"app/SEARCH_QUERY_LOADING\"\r\n\r\nexport default function generateReducer(state,action){\r\n  switch (action.type) {\r\n    case SEARCH_QUERY_SUCCESS:\r\n      return {\r\n        status: \"success\",\r\n        data: action.data,\r\n        error: undefined\r\n      };\r\n\r\n    case SEARCH_QUERY_FAIL:\r\n      return {\r\n        status: \"error\",\r\n        error: action.error,\r\n        data: undefined\r\n      };\r\n\r\n    case SEARCH_QUERY_LOADING:\r\n      return {\r\n        ...state,\r\n        status: \"loading\"\r\n      };\r\n\r\n    default:\r\n      return state\r\n  }\r\n};","const MelbourneData ={\r\n  data:  [{\r\n    \"name\": \"Bob\",\r\n    \"gender\": \"Male\",\r\n    \"age\": 23,\r\n    \"pets\": [{\"name\": \"Garfield\", \"type\": \"Cat\"}]\r\n  }, {\"name\": \"Jennifer\", \"gender\": \"Female\", \"age\": 18, \"pets\": [{\"name\": \"Tom\", \"type\": \"Cat\"}]}, {\r\n    \"name\": \"Steve\",\r\n    \"gender\": \"Male\",\r\n    \"age\": 45,\r\n    \"pets\": null\r\n  }, {\r\n    \"name\": \"Fred\",\r\n    \"gender\": \"Male\",\r\n    \"age\": 40,\r\n    \"pets\": [{\"name\": \"Meong\", \"type\": \"Cat\"}, {\"name\": \"Jim\", \"type\": \"Cat\"}, {\"name\": \"Hulk\", \"type\": \"Dog\"}]\r\n  }, {\"name\": \"Samantha\", \"gender\": \"Female\", \"age\": 30, \"pets\": [{\"name\": \"Tabby\", \"type\": \"Cat\"}]}, {\r\n    \"name\": \"Alice\",\r\n    \"gender\": \"Female\",\r\n    \"age\": 64,\r\n    \"pets\": [{\"name\": \"Simba\", \"type\": \"Cat\"}, {\"name\": \"Nemo\", \"type\": \"Fish\"}]\r\n  }]\r\n};\r\nexport default MelbourneData;","const SydneyData = {\r\n  data: [{\"name\": \"Thomas\", \"gender\": \"Male\", \"age\": 55, \"pets\": [{\"name\": \"Loki\", \"type\": \"Fish\"}]}, {\r\n    \"name\": \"Bond\",\r\n    \"gender\": \"Male\",\r\n    \"age\": 28,\r\n    \"pets\": [{\"name\": \"Jerry\", \"type\": \"Bird\"}, {\"name\": \"Tom\", \"type\": \"Cat\"}]\r\n  }, {\"name\": \"Lara\", \"gender\": \"Female\", \"age\": 35, \"pets\": null}, {\r\n    \"name\": \"Bruce\",\r\n    \"gender\": \"Male\",\r\n    \"age\": 25,\r\n    \"pets\": [{\"name\": \"Peter\", \"type\": \"Cat\"}, {\"name\": \"Clark\", \"type\": \"Dog\"}, {\"name\": \"Tony\", \"type\": \"Cat\"}]\r\n  }, {\"name\": \"Steve\", \"gender\": \"Male\", \"age\": 72, \"pets\": [{\"name\": \"Scar\", \"type\": \"Cat\"}]}, {\r\n    \"name\": \"Jame\",\r\n    \"gender\": \"Female\",\r\n    \"age\": 29,\r\n    \"pets\": [{\"name\": \"Ani\", \"type\": \"Cat\"}, {\"name\": \"Barkshire\", \"type\": \"Dog\"}]\r\n  }]\r\n};\r\n\r\nexport default SydneyData;","//import packages from node modules\r\nimport axios from \"axios\";\r\nimport MockMelbourneData from \"../data/melburne\";\r\nimport MockSydneyData from \"../data/sydney\";\r\n\r\nexport const MELBOURNE = \"Melbourne\";\r\nexport const SYDNEY = \"Sydney\";\r\n\r\nconst {\r\n  REACT_APP_END_POINT_SYDNEY,\r\n  REACT_APP_END_POINT_MELBOURNE,\r\n  REACT_APP_MOCKED_DATA\r\n} = process.env;\r\n\r\n\r\nconst API = ({\r\n  getSydneyData : () =>{\r\n    if(REACT_APP_MOCKED_DATA===\"TRUE\"){\r\n      return new Promise( (resolve) => {\r\n        setTimeout(()=>{\r\n          resolve(MockMelbourneData)\r\n        },500)\r\n      });\r\n    }\r\n    return axios.get(REACT_APP_END_POINT_SYDNEY);\r\n  },\r\n  getMelbourneData : () =>{\r\n    if(REACT_APP_MOCKED_DATA===\"TRUE\"){\r\n      return new Promise( (resolve) => {\r\n        setTimeout(()=>{\r\n          resolve(MockSydneyData)\r\n        },500)\r\n      });\r\n    }\r\n    return axios.get(REACT_APP_END_POINT_MELBOURNE);\r\n  }\r\n});\r\n\r\nexport const getDataByCity =(city) =>{\r\n  switch (city) {\r\n    case MELBOURNE:\r\n      return [API.getMelbourneData()];\r\n    case SYDNEY :\r\n      return [API.getSydneyData()];\r\n    default:\r\n      return [\r\n        API.getMelbourneData(),\r\n        API.getSydneyData()\r\n      ];\r\n  }\r\n};","//combine data into one array from one or multiple promises\r\nexport const getDataFromAPIResponses = (responses) => {\r\n\r\n  const merged = [];\r\n\r\n  if (responses && responses.length) {\r\n    responses.forEach(response => {\r\n      merged.push(...response.data)\r\n    });\r\n  }\r\n\r\n  return merged;\r\n};\r\n\r\n//search data based on owner and pet name\r\nexport const filterDataByOwnerAndPetName = (data,query) =>{\r\n\r\n  if(data && data.length && query){\r\n\r\n    const queryString = query.toLowerCase();\r\n\r\n    //check owner name\r\n    const matchOwnerName = (name) =>{\r\n      const ownerString = name.toLowerCase();\r\n      return (ownerString.indexOf(queryString) !== -1)\r\n    };\r\n\r\n    //check pet name\r\n    const matchPetName = (pets) => {\r\n      (pets && pets.some(pet => pet.name.toLowerCase().indexOf(queryString) !== -1))\r\n    };\r\n\r\n    return data.filter((item) => {\r\n      const {name, pets} = item;\r\n      return (\r\n          matchOwnerName(name) || matchPetName(pets)\r\n      )\r\n    });\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nexport const filterDataByGender = (data,gender) =>{\r\n\r\n  if(gender && data && data.length){\r\n    return data.filter(item=> item.gender===gender);\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nexport const filterDataByPetType = (data,petType) => {\r\n  const hasPets = (item) => item.pets && item.pets.length;\r\n  const matchPetType = (item) => item.pets.some(pet=>pet.type===petType);\r\n\r\n  if(petType && data && data.length){\r\n    return data.filter(item=> hasPets(item) && matchPetType(item))\r\n  }\r\n\r\n  return data;\r\n};","import {createContext,useReducer} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport reducer, {\r\n  SEARCH_QUERY_LOADING,\r\n  SEARCH_QUERY_SUCCESS,\r\n  SEARCH_QUERY_FAIL\r\n} from \"./reducer\";\r\n\r\nimport {getDataByCity} from \"./utilities/api\";\r\nimport {\r\n  getDataFromAPIResponses,\r\n  filterDataByOwnerAndPetName,\r\n  filterDataByGender,\r\n  filterDataByPetType\r\n} from \"./utilities/dataHandler\";\r\n\r\n\r\nexport const AppContext=  createContext();\r\n\r\nconst initialState = {\r\n  requestData: undefined\r\n};\r\n\r\n\r\nconst AppProvider = (props) =>{\r\n  const {children} = props;\r\n  const [state,dispatch] =  useReducer(reducer,initialState);\r\n\r\n  const actions =  {\r\n    searchQuery : (payload)=>{\r\n      dispatch({\r\n        type: SEARCH_QUERY_LOADING,\r\n        payload\r\n      })\r\n      const {city,query,gender,petType} = payload\r\n      Promise.all(getDataByCity(city)).then(responses => {\r\n        let data = [];\r\n\r\n        //combine data into one array from one or multiple promises\r\n        data = getDataFromAPIResponses(responses);\r\n\r\n        //search data based on owner and pet name\r\n        data = filterDataByOwnerAndPetName(data,query);\r\n\r\n        //check gender\r\n        data = filterDataByGender(data,gender);\r\n\r\n        //check petType\r\n        data = filterDataByPetType(data,petType)\r\n\r\n        dispatch({\r\n          type: SEARCH_QUERY_SUCCESS,\r\n          data\r\n        });\r\n\r\n      }, error => {\r\n\r\n        dispatch({\r\n          type: SEARCH_QUERY_FAIL,\r\n          error\r\n        });\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n      <AppContext.Provider value={{\r\n        state,\r\n        actions\r\n      }}>\r\n        {children}\r\n      </AppContext.Provider>\r\n  )\r\n};\r\n\r\nAppProvider.propTypes = {\r\n  children: PropTypes.any\r\n}\r\n\r\nexport default AppProvider;","//import packages from node modules\r\nimport React, {useContext, useRef} from \"react\";\r\n\r\n//import shared components\r\nimport TextField from \"../TextField\";\r\nimport DropdownField from \"../DropdownField\";\r\nimport Button from \"../Button\";\r\n\r\n//import from untiltis\r\nimport {CITY_OPTIONS, GENDER_OPTIONS, PET_TYPE} from \"../../data/filter\";\r\n\r\nimport {AppContext} from \"../../provider\";\r\n\r\n//main component\r\nexport default function SearchForm(){\r\n\r\n  const {actions} = useContext(AppContext);\r\n  const searchFieldRef = useRef(null);\r\n  const filterCityFieldRef = useRef(null);\r\n  const filterGenderRef = useRef(null);\r\n  const filterPetTypeRef = useRef(null);\r\n\r\n  const onSubmit = (e) =>{\r\n    e.preventDefault();\r\n    const city = filterCityFieldRef.current.value;\r\n    const query = searchFieldRef.current.value;\r\n    const gender = filterGenderRef.current.value;\r\n    const petType = filterPetTypeRef.current.value;\r\n    actions.searchQuery({\r\n      city,\r\n      gender,\r\n      petType,\r\n      query\r\n    });\r\n  };\r\n\r\n  return(\r\n      <div className={\"container\"}>\r\n        <h1>Dorsavi Test - Edmond Halley</h1>\r\n        <form onSubmit={onSubmit}>\r\n          <div className={\"form-group\"}>\r\n            <TextField fieldRef={searchFieldRef} placeholder={\"Type name of pets or the owner\"} label={\"Search\"} />\r\n          </div>\r\n          <div className={\"form-group row\"}>\r\n            <div className={\"col-12\"}><h6>Filter By:</h6></div>\r\n            <div className={\"col-4\"}>\r\n              <DropdownField label={\"City\"} fieldRef={filterCityFieldRef} data={CITY_OPTIONS} />\r\n            </div>\r\n            <div className={\"col-4\"}>\r\n              <DropdownField label={\"Gender\"} fieldRef={filterGenderRef} data={GENDER_OPTIONS} />\r\n            </div>\r\n            <div className={\"col-4\"}>\r\n              <DropdownField label={\"Pet Type\"} fieldRef={filterPetTypeRef} data={PET_TYPE} />\r\n            </div>\r\n          </div>\r\n          <Button>Go!</Button>\r\n        </form>\r\n      </div>\r\n  )\r\n}","import React,{useContext} from \"react\";\r\nimport {AppContext} from \"../../provider\";\r\n\r\n//main component\r\nexport default function SearchResult (){\r\n  const {state} = useContext(AppContext);\r\n\r\n  const renderPets = (pets) =>{\r\n    const renderList = () => {\r\n      if (pets && pets.length) {\r\n        return (pets.sort((a,b)=>{\r\n          return a.name.localeCompare(b.name)\r\n        }).map((pet, index) => {\r\n          const {name, type} = pet\r\n          return (\r\n              <li key={index}>{name} - {type}</li>\r\n          )\r\n        }))\r\n      }\r\n    };\r\n    return (\r\n        <ul>\r\n          {renderList()}\r\n        </ul>\r\n    )\r\n  }\r\n\r\n  const renderResult = () =>{\r\n    const renderData = () => {\r\n      const renderList = () => {\r\n        if(state.data && state.data.length){\r\n          return state.data.map((record,index)=> {\r\n            const {name,gender,age,pets} = record;\r\n            return (<tr key={index} className={\"result-item\"}>\r\n              <td className={\"w-25\"}>{name}</td>\r\n              <td className={\"w-25\"}>{gender}</td>\r\n              <td className={\"w-25\"}>{age}</td>\r\n              <td className={\"w-25\"}>{renderPets(pets)}</td>\r\n            </tr>)\r\n          });\r\n        }\r\n      }\r\n      return (\r\n          <table className={\"table mt-5\"}>\r\n            <thead>\r\n            <tr className={\"result-item\"}>\r\n              <th className={\"w-25\"}>Owner Name</th>\r\n              <th className={\"w-25\"}>Gender</th>\r\n              <th className={\"w-25\"}>Age</th>\r\n              <th className={\"w-25\"}>Pets</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {renderList()}\r\n            </tbody>\r\n\r\n          </table>\r\n      )\r\n    }\r\n\r\n    switch (state.status) {\r\n      case \"loading\":\r\n        return (\r\n            <div className={\"d-flex justify-content-center my-5\"}>\r\n              <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n            </div>\r\n        );\r\n      case \"success\":\r\n        return renderData();\r\n      default:\r\n        return (<></>)\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div className={\"container\"}>\r\n        <div className={\"row\"}>\r\n          <div className={\"col-12\"}>\r\n            {renderResult()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}","import React from \"react\";\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport SearchForm from \"./components/SearchForm\";\nimport SearchResult from \"./components/SearchResult\";\nimport Provier from \"./provider\";\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <Provier>\n          <SearchForm/>\n          <SearchResult/>\n        </Provier>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}